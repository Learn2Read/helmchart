apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "api-server.fullname" . }}
  labels:
    {{- include "api-server.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "api-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "api-server.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "api-server.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          envFrom:
          - configMapRef:
              name: app-config
          env:
          - name: DB_HOST
            valueFrom:
              secretKeyRef:
                name: pg-secret
                key: host
          - name: DB_PORT
            valueFrom:
              secretKeyRef:
                name: pg-secret
                key: port
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: pg-secret
                key: username
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                name: pg-secret
                key: password  
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: pg-secret
                key: database 
          - name: KEYCLOAK_REALM
            valueFrom:
              secretKeyRef:
                name: keycloak-secret
                key: realm 
          - name: KEYCLOAK_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: keycloak-secret
                key: client_id 
          - name: KEYCLOAK_CLIENT_SECRET
            valueFrom:
              secretKeyRef:
                name: keycloak-secret
                key: client_secret 
          - name: KEYCLOAK_AUTH_SERVER
            valueFrom:
              secretKeyRef:
                name: keycloak-secret
                key: auth_server                                          
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /management/info
              port: http
          readinessProbe:
            httpGet:
              path: /management/health
              port: http
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

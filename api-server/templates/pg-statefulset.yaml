---
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: pg-database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pg-database
  template:
    metadata:
      labels:
        app: pg-database
    spec:
      containers:
      - name: pg-database
        image: "{{ .Values.pg.image.repository }}:{{ .Values.pg.image.tag }}"
        ports:
        - name: tcp-pg-port
          containerPort: 5432
          protocol: TCP
        env:
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: pg-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pg-secret
              key: password
        resources: {}
        volumeMounts:
        - name: pg-data
          mountPath: "/var/lib/postgresql/data"
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      securityContext: {}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: pg-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ .Values.pg.volume_size }}
      {{- if .Values.pg.storageClassName }}
      storageClassName: {{ .Values.pg.storageClassName }}
      {{- end }}
  serviceName: db-svc
